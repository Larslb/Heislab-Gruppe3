package Network
import(
	"fmt"
	"Queue"
	"time"
	"encoding/json"
)

type NetworkOrder struct{
	Message string
	IPaddr int
	Order MyOrder 
}


func BroadcastOrder(){

}

func ListenUDP(){

}

func sendMessageUDP(){
	baddr,err := net.ResolveUDPAddr("udp", "129.241.187.255:20004")
	sendSock, err := net.DialUDP("udp", nil ,baddr) // connection
	send_msg := []byte("JS")
	time.Sleep(1*time.Second)
	_,err = sendSock.Write(send_msg)
	//fmt.Println(err)
	if err != nil{
		panic(err)
	}
}

func recvMessageUDP(){
	buffer := make([]byte,1024) 
	raddr,_ := net.ResolveUDPAddr("udp", ":20004")
	receivesock,_ := net.ListenUDP("udp", raddr)
	for  {
		mlen ,_,_ := receivesock.ReadFromUDP(buffer)
		fmt.Println(string(buffer[:mlen]))
	}
}


